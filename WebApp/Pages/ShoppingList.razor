@page "/shoppinglist"
@using Common
@using Microsoft.FSharp.Core;

<div class="dropdown" style="margin-bottom:20px;">
    @{ 
        var currentStoreName = StoreFilterChoices.FirstOrDefault(i => i.StoreId.Item == StoreFilter)?.StoreName.Item ?? "All Stores";
    }
    <button class="btn btn-outline-dark btn-lg dropdown-toggle" style="font-weight:bold" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        @currentStoreName
    </button>
    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
        <a class="dropdown-item" href="#" @onclick="e=>OnStoreFilterClear()" @onclick:preventDefault>All Stores</a>
        <div class="dropdown-divider"></div>
        @foreach (var s in StoreFilterChoices) {
            string description = s.StoreName.Item;
            <a class="dropdown-item" href="#" @onclick="e=>OnStoreFilter(s.StoreId)" @onclick:preventDefault>@description</a>
        }
        @if (StoreFilter != Guid.Empty) {
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="editstore/@StoreFilter">Edit @currentStoreName...</a>
        }
    </div>
</div>
@foreach (var cat in Items.Select(j => j.Category).Distinct().OrderBy(i => i)) {
    var categoryName = cat.IsNone() ? "(Uncategorized)" : cat.Value.CategoryName.Item;
    <div>
        <h4 style="display:inline-block">
            @categoryName
        </h4>
        @if (cat.IsSome()) {
            <text>&nbsp;</text><a href="categoryedit/@cat.Value.CategoryId.Item">edit</a>
        }
    </div>
    @foreach (var item in Items.Where(i => object.Equals(i.Category, cat))) {
        <WebApp.Shared.Item HideCategory="true" OnClickBuyAgain="OnClickBuyAgain" OnClickDelete="OnClickDelete" OnClickComplete="OnClickComplete" ItemQry="@item" />
    }
}
<a class="btn btn-primary" href="itemedit2">New item</a>
