@using Microsoft.FSharp.Core
@using Client.Shared
<p>
    <style>
        span.overdue { background-color : red; color : white }
        span.today { background-color : blue; color : white }
        span.later { background-color : lightgray }
        span.completeTitle { font-weight:bold; text-decoration:line-through }
        span.incompleteTitle { font-weight:bold }
    </style>
    @{
        string titleStyle = Item.IsComplete ? "completeTitle" : "incompleteTitle";
    }
    @if (Item.Repeats.AsEnumerable().Select(i=>i.Due.IsSome()).Any())
    {
        var due = Item.Repeats.Value.Due.Value;
        DateTime now = DateTime.Now;
        int daysUntil = Convert.ToInt32((due - now).TotalDays);
        (string daysUntilText,string styleName) =
            (daysUntil < 0) ? ("Due","overdue") :
            (daysUntil == 0) ? ("Today","today") :
            ($"+{daysUntil} days","later");
        <span class="@styleName">@daysUntilText</span>
    }
    <span class="@titleStyle">@Item.Title</span>@if (Item.Quantity.IsSome())
    {<span> * @Item.Quantity.Value</span>}@if (Item.Note.IsSome())
    {<br /><span>@Item.Note.Value</span>}
</p>

@code {
    [Parameter]
    public ViewModelTypes.ListItemViewModel Item { get; set; }
}