@page "/edititem"
@using static DomainTypes.Frequency
@using static ItemBuilder
@using Unit = Microsoft.FSharp.Core.Unit

<style>
    .validationError {
        color: red;
    }

    .completedTitle {
        text-decoration: line-through;
        font-weight: bold;
    }
</style>

<h3>Add/Edit item</h3>
<input value="@tb.Text" @onfocus="tbonfocus" @onblur="tbonblur" @oninput="tbchange" />
<p>Normalized: @tb.NormalizedText</p>
<p>Error: @(tb.Error.GetOr("- no error -"))</p>
<form>
    <div>
        <label>
            Status:
            <select @onchange="ChangeStatus">
                @{
                    foreach (var i in model.Status.Choices)
                    {
                        <option selected="@(i.Equals(model.Status.SelectedItem))" value="@i.Description">@i.Description</option>
                    }
                }
            </select>
        </label>
    </div>
    <div>
        <label>
            Name: <input @oninput="OnTitleChange" placeholder="Apples, Canned Tuna, ..." value="@model.Title.Value" />@if (model.Title.Error.IsSome())
            {<span class="validationError">@model.Title.Error.Value</span>}
        </label>
    </div>
    <div>
        <label>
            Quantity: <input placeholder="3 large, 1 can, lots, ..." value="@model.Quantity" @oninput="SetQty" />
            <button disabled="@(!CanDecreaseQuantity())" type="button" @onclick="DecreaseQuantity">-</button>
            <button disabled="@(!CanIncreaseQuantity())" type="button" @onclick="IncreaseQuantity">+</button>
        </label>
    </div>
    <div><label>Note: <textarea @oninput="OnNoteChange" rows="3" placeholder="Favorite brand, organic-only, ...">@model.Note</textarea></label></div>
    <div>
        <label>
            Repeat:
            <select @onchange="OnRecurrenceChange">
                @{
                    @foreach (var i in model.Repeat.Choices)
                    {
                        <option selected="@(i.Equals(model.Repeat.SelectedItem))" value="@(SerializeRepeatInterval(i.AsNullable()))">@RepeatText(i)</option>
                    }
                }
            </select>
        </label>
    </div>
    <button type="button" disabled="@(ItemBuilder.hasErrors(model))">Save</button>

    @*
        @if (!hasErrors(model))
        {
        }
        else
        {
            <button disabled>Save</button>
        }
        <button type="button" disabled>Cancel</button>
        <button type="button" disabled>Delete</button>*@
</form>
