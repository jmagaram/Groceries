@page "/find"

<style>
    span.highlightedItem {
        background-color: yellow;
        border-width: 0px;
        padding: 0px;
    }

    span.standardItem {
        border-width: 0px;
        padding: 0px;
    }
</style>
<h1>Find</h1>

<input value="@model.Filter" @oninput="@(e=>UpdateFilter((string)e.Value))" />
<br />
@if (model.HighlightedItems.Any())
{
    foreach (var i in model.HighlightedItems)
    {
        <p>
            @foreach (var s in i.TitleMatches)
            {
                var (part, isMatch) = s;
                var style = isMatch ? "highlightedItem" : "standardItem";
<span class="@style">@part</span>}
        </p>
    }
}
else
{
    <p>Nothing found!</p>
}

@code {
    protected void UpdateFilter(string filter)
    {
        model = FindViewModel.updateSearch(model, filter);
    }

    private FindViewModel.ViewModel model;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        model = FindViewModel.initialize(Test.sampleItems);
    }
}
